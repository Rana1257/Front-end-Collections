webpackJsonp([2],{jdn4:function(r,n){r.exports="# JavaScript的运行机制\r\n\r\n你有好奇过一段JavaScript代码是怎样执行的吗？换句话说，JavaScript引擎在执行一段JavaScript代码的时候，究竟发生了什么？这看起来确实是有点偏向底层的东西，但是了解JS的运行机制，有助于你编写更好的代码和APP。对于老手而言，如果你的项目非常依赖JavaScript，那么作为开发人员，充分利用JavaScript这门语言的全部，并对其内部进行越来越深入的了解，才能构建出色的软件。\r\n\r\n对于新手而言，作用域链，this和闭包恐怕是每个刚学习前端的同学的梦魇。除此之外还有事件循环（Event loop），变量提升等等，而这些知识点都与JavaScript的运行机制密切相关。现在你明白了解JavaScript的运行机制有多么重要了吧？:thumbsup:\r\n\r\n通过阅读下面的内容，你将会了解到：\r\n* JS代码的执行机制\r\n* 执行上下文\r\n* 作用域与作用域链\r\n* this的指向\r\n* 闭包的本质\r\n\r\n## 预备知识\r\n\r\n### 进程与线程\r\n\r\n进程：[进程](https://zh.m.wikipedia.org/wiki/%E8%A1%8C%E7%A8%8B)是操作系统中的程序运行的一个实例。\r\n线程：[线程](https://zh.m.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B)是操作系统能够调度的最小单位。\r\n联系：线程是建立在进程的基础上的一次程序运行单位，一个进程中可以有多个线程。\r\n\r\n用人类能够听的懂得话来说：\r\n\r\n>进程是一个工厂，工厂有它的独立资源，工厂之间相互独立。\r\n>线程是工厂中的工人，多个工人协作完成任务\r\n>工厂内有一个或多个工人\r\n\r\n>工厂的资源 -> 系统分配的内存（独立的一块内存）\r\n>工厂之间的相互独立 -> 进程之间相互独立\r\n>多个工人协作完成任务 -> 多个线程在进程中协作完成任务\r\n>工厂内有一个或多个工人 -> 一个进程由一个或多个线程组成\r\n\r\n以上引用来自[从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理](https://juejin.im/post/5a6547d0f265da3e283a1df7#heading-2)。\r\n\r\n总的来说：进程就是一个程序实际运行的一个**实例**（单位），线程则是进程中的一个**控制流**。\r\n\r\n### 浏览器的进行和线程\r\n\r\n浏览器本身是多进程的，浏览器的主要进程包括\r\n\r\n* Browser进程：浏览器的主进程\r\n* **Renderer进程**：浏览器的渲染进程，或者叫浏览器内核，是前端领域一切事情发生的地方。它负责页面渲染，脚本执行，事件处理等等。默认情况下每个页面是一个进程，打开新的网页相当于新起了一个进程。\r\n* GPU进程：3D绘制。\r\n* 第三方插件进程：每个插件对应一个第三方插件进程。\r\n\r\n对于我们的主角Renderer进程来说，它本身又拥有多个线程，包括：\r\n\r\n* GUI线程：负责渲染，比如解析HTML，CSS等等，回流和重绘也是由它执行的。此外，GUI线程与JS线程**互斥**，也就是说它们之间同时只能有一个在执行，另一个会被暂时挂起。\r\n\r\n互斥是因为JS可以操作DOM，它可以修改HTML元素和CSS样式。如果GUI线程和JS线程可以同时进行，那么就导致JS线程一边在修改元素属性，同时GUI线程一边在渲染页面。只要JS线程没有停止对页面做修改，GUI线程就在白费功夫。\r\n\r\n所以GUI线程与JS线程是互斥的，当JS引擎执行的时候，GUI线程会被挂起，GUI线程的更新会被保存在一个队列中，等到JS引擎线程空闲时再被执行。这也是JS的执行会阻塞页面的渲染的本质原因。\r\n\r\n* **JS引擎线程**：负责处理JavaScript脚本，例如V8引擎。如果JS的执行时间过长，就会造成页面渲染被阻塞。本文所要阐述的JS运行就发生在这。\r\n\r\n* 事件触发线程\r\n* 定时触发器线程\r\n* 异步http请求线程\r\n\r\n总结：\r\n* 浏览器本身是多进程的，其中一个进程叫渲染进程。渲染进程是多线程的，其中一个叫JS线程（JS引擎）。\r\n\r\n* JS引擎本身是**单线程**的。这是因为多线程会导致并发性的错误（设想线程A在添加DOM节点，线程B同时在删除同一个DOM节点？:fearful:）。而异步操作本质上并没有改变JS的单线程特性，异步只是通过事件队列（Event queue）假装自己是多线程。\r\n\r\n* HTML5中的[Web Worker](https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API)也没有破坏JS引擎单线程的特性。Worker线程独立于JS线程，当Worker线程完成计算后，再将结果通知给JS线程。详见[这里](http://www.ruanyifeng.com/blog/2018/07/web-worker.html)。\r\n\r\n### JS引擎\r\n\r\n一个JavaScript引擎由两部分组成，以著名的V8引擎为例，它包括：\r\n* 内存堆：分配内存的地方\r\n* 调用栈：执行函数的地方\r\n\r\n![img](https://raw.githubusercontent.com/Rana1257/Front-end-Collections/master/static/img/JavaScript%E7%9A%84%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6-%E5%9B%BE1.jpg)"}});
//# sourceMappingURL=2.f95dc96090282b3a5ba6.js.map